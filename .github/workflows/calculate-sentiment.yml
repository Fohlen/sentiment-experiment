name: Calculate sentiment
on: [push]
jobs:
  sentiment-analysis:
    timeout-minutes: 1440
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        version: [RC_2020-01, RC_2020-02, RC_2020-03, RC_2020-04, RC_2020-05, RC_2020-06, RC_2020-07, RC_2020-08, RC_2020-09, RC_2020-10, RC_2020-11, RC_2020-12]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Download archive
        run: curl ${{ format('https://files.pushshift.io/reddit/comments/{0}.zst', matrix.version ) }} >> archive.zst
      - name: Select target comments
        env:
            FILTER: '["Aave_Official", "binance", "Bitcoin", "cardano", "Chainlink", "cosmosnetwork", "cro", "dogecoin", "eos", "ethereum", "litecoin", "Monero", "nem", "dot", "solana", "Stellar", "Tether", "Tronix", "USDC", "UniSwap", "WBTC", "Ripple"]'
        run: zstdcat --memory=2048MB archive.zst | jq --argjson f "$FILTER" -c '. | select(.subreddit == $f[])' >> comments.jsonl
      - name: Calculate sentiments
        run: cat comments.jsonl | jq -r '.body' | python3 sentiment_for_lines.py >> sentiment.txt
      - name: Create dataset
        run: |
          cat comments.jsonl | jq -r '. | [.id, .subreddit, .created_utc] | @tsv' >> basic.tsv
          paste basic.tsv sentiment.txt >> dataset.tsv
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ format('{0}-sentiment.tsv', matrix.version) }}
          path: dataset.tsv
